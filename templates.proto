syntax = "proto3";

package TemplatesService;
 
option go_package = "api/templates";

message Empty {}


message FeatureLinkTemplateStruct
{
    uint64 id = 1;
    uint64 feature_id = 2;
    uint64 template_id = 3;
    string value = 4;
}

message TemplateStruct
{
    uint64 id = 1;
    string name = 2;
    string description = 3;
}

message TemplatesList
{
    repeated TemplateStruct items = 1;
}


message FeatureStruct {
    enum FeatureType {
        RANGE = 0;
        LIST = 1;
    }

    uint64 id = 1;
    string name = 2;
    FeatureType feature_type = 3;
}


message FeaturesList
{
    repeated FeatureStruct items = 1;
}


message IdStruct
{
    uint64 id = 1;
}

message NameStruct
{
    string name = 1;
}


// фича с ссылкой
message FeatureLinkTemplate
{
    FeatureLinkTemplateStruct link = 1;
    FeatureStruct feature = 2;
}


// хранит на 1 шаблон кучу фич с описанием данных из ссылок
message HibridFeatureLinkTemplateList
{
    repeated FeatureLinkTemplate items = 1;
}




service Templates
{
    rpc CreateLink(FeatureLinkTemplateStruct) returns (IdStruct);                   // Создание связи между фичами и шаблонами +
    rpc UpdateLink(FeatureLinkTemplateStruct) returns (Empty);                      // Редактирование связи между таблицами
    rpc DeleteLink(FeatureLinkTemplateStruct) returns (Empty);                      // Удаление связи между таблицами +


    rpc CreateTemplate(TemplateStruct) returns (IdStruct);                           // Создание нового шаблона +
    rpc UpdateTemplate(TemplateStruct) returns (Empty);                              // Редактирование шаблона +
    rpc DeleteTemplate(IdStruct) returns (Empty);                                    // Удаление шаблона по id +



    rpc CreateFeature(FeatureStruct) returns (IdStruct);                             // Создание фичи +
    rpc UpdateFeature(FeatureStruct) returns (Empty);                                // Редактирование фичи +
    rpc DeleteFeature(IdStruct) returns (Empty);                                     // Удаление фичи +


    rpc GetFeatureByName(NameStruct) returns (FeatureStruct);                        // Получение фичи по её имени
    rpc GetAllTemplates(Empty) returns (TemplatesList);                              // Получение всех шаблонов +
    rpc GetFeaturesByTemplateId(IdStruct) returns (HibridFeatureLinkTemplateList);   // Получение фичи по айди шаблона +
}
